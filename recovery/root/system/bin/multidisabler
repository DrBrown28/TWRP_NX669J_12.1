#!/system/bin/sh

md5() {
  md5sum -b "$1"
}

file_changed() {
  local file="$1"
  local old_md5="$2"
  local new_md5=$( md5 "$file" )

  if [ $new_md5 != $old_md5 ]; then
    echo " -     ...modified."
  else
    echo " -     ...unchanged."
  fi
}

resize_vendor() {
  local dm_block=$(df -k | cat | grep "/vendor" | cut -d' ' -f1)

  echo " - Unmounting /vendor..."
  umount /vendor
  echo " - Checking vendor block partition before resizing..."
  e2fsck -f $dm_block
  echo " - Resizing the filesystem on $dm_block..."
  resize2fs $dm_block
  echo " - Make the partition R/W by unsharing its blocks..."
  e2fsck -E unshare_blocks $dm_block
  echo " - Remounting /vendor..."
  mount /vendor
  mount -o remount,rw /vendor
}

disable_fbe() {
  local md5
  local i
  fstab_files=`grep -lr 'fileencryption' vendor/etc`

  for i in $fstab_files; do
    if [ -f $i ]; then
      ui_print " - Disabling file-based encryption (FBE) for /data..."
      ui_print " -   Found $i."
      md5=$( md5 $i )
      sed -i -e 's/\,fileencryption\=aes\-256\-xts\:aes\-256\-cts\:v2\+inlinecrypt\_optimized\,wrappedkey\,//g' -e 's/\,keydirectory\=\/metadata\/vold\/metadata\_encryption//g' \
             -e 's/\,inlinecrypt//g' -e 's/\,wrappedkey//g' $i      # This comments out the offending line and adds an edited one.
      sed -i -e 's/^\([^#].*\)fileencryption=[^,]*\(.*\)$/# &\n\1encryptable\2/g' $i
      file_changed $i $md5
    fi
  done
}

disable_fde() {
  local md5
  local i
  fstab_files=`grep -lr 'forceencrypt' vendor/etc`

  for i in $fstab_files; do
    if [ -f $i ]; then
      echo " - Disabling full-disk encryption (FDE) for /data..."
      echo " -   Found $i."
      md5=$( md5 $i )
      sed -i -e 's/^\([^#].*\)forceencrypt=[^,]*\(.*\)$/# &\n\1encryptable\2/g' $i
      file_changed $i $md5
    fi
  done
}

disable_avb() {
  ui_print " - Disabling Android Verified Boot (AVB)..."
  sed -i -e 's/\,avb\_keys\=\/avb\/q\-gsi\.avbpubkey\:\/avb\/r\-gsi\.avbpubkey\:\/avb\/s\-gsi\.avbpubkey//g' -e 's/\,avb\=vbmeta//g' \
         -e 's/\,avb//g' /vendor/etc/fstab.qcom
}

disable_recovery_restoration() {
  local r=recovery-from-boot.p
  local found
  local i

  ui_print " - Disabling restoration of stock recovery..."

  for i in $ANDROID_ROOT $ANDROID_ROOT/system /vendor; do
    if [ -f $i/$r~ ]; then
	ui_print " -   ...already disabled."
	found=true
	break
    fi

    if [ -f $i/$r ]; then
      ui_print " -   Found $i/$r. Disabling..."
      mv $i/$r $i/$r~

      sed -i -e 's/^[^#]/# &/' /vendor/etc/init/vendor_flash_recovery.rc

      if [ -f $i/$r~ ]; then
	ui_print " -     ...succeeded."
      else
	ui_print " -     ...failed."
      fi

      found=true
      break
    fi

  done

  [ -z "$found" ] && ui_print " -   Found no stock recovery. Pfft."
}

disable_frp() {
  ui_print " - Disabling Factory Reset Protection (FRP)..."
  sed -i 's/ro\.frp\.pst\=.*/ro\.frp\.pst\=/g' /vendor/build.prop
}

debloat() {
  ui_print " - Minimal Debloat..."
  rm -f /data/system/locksettings.db*
  rm -f /vendor/recovery-from-boot*
  rm -f $ANDROID_ROOT/recovery-from-boot*
  rm -f $ANDROID_ROOT/system/recovery-from-boot*
}

echo " "
echo "Multi-disabler v3.1"
echo "running Android 9 or later."
echo " "

echo " - Mounting $ANDROID_ROOT..."
mount $ANDROID_ROOT 2>/dev/null
mount -o remount,rw $ANDROID_ROOT 2>/dev/null

if ! mount | grep $ANDROID_ROOT >/dev/null; then
  ANDROID_ROOT=/system_root
  echo " -   Attempt failed. Mounting at $ANDROID_ROOT..."
  mount -o rw $ANDROID_ROOT
  if ! mount | grep $ANDROID_ROOT >/dev/null; then
    echo " -   Even that attempt failed. Aborting..."
    exit 2
  fi
fi

echo " - Mounting /vendor..."
mount /vendor
mount -o remount,rw /vendor

if ! mount | grep /vendor >/dev/null; then
  echo " -   Mount failed. Aborting..."
  exit 3
fi

resize_vendor
disable_fbe
disable_fde
disable_avb
disable_recovery_restoration
disable_frp
debloat

echo " - Unmounting /vendor..."
umount /vendor
echo " - Unmounting $ANDROID_ROOT..."
umount $ANDROID_ROOT

echo " "
echo " - Finished."
echo " "